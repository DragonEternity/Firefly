---
- hosts: gluster_servers
  vars_prompt:
    - name: replicacount
      prompt: Replica Count? (2/3)
      private: no
  tasks:
    - name: Add GlusterFS repo GPO key through shell
      shell: wget -O - http://download.gluster.org/pub/gluster/glusterfs/3.9/rsa.pub | apt-key add -
      args:
        warn: False
    - name: Add GlusterFS repository
      apt_repository:
        repo='deb http://download.gluster.org/pub/gluster/glusterfs/3.9/LATEST/Debian/jessie/apt jessie main'
        state=present
        filename=gluster-fs
    - name: Install GlusterFS
      apt: name={{item}} state=present update_cache=yes
      with_items:
        - glusterfs-*
    - name: Ensure GlusterFS service is running
      service:
        name=glusterfs-*
        state=started
    - name: Create GlusterFS brick
      file:
        path=/srv/glusterfs/brick
        state=directory
    - name: Create GlusterFS volume
      gluster_volume:
        bricks=/srv/glusterfs/brick
        cluster={{groups.gluster_servers | join(",")}}
        replicas={{replicacount}}
        name=wwwhtml
        state=present
        force=true
      run_once: true
    - name: Start GlusterFS volume
      gluster_volume:
        name=wwwhtml
        state=started
    - name: Create GlusterFS brick mount dir
      file:
        path=/var/www/html
        state=directory
    - name: Mount
      mount:
        name: /var/www/html
        src: 127.0.0.1:/wwwhtml
        fstype: glusterfs
        opts: "defaults,_netdev"
        state: mounted
    - name: Create scripts dir for bup.sh
      file:
        name=/scripts
        state=directory
    - name: Copy bup.sh to /scripts
      copy:
        src=./files/bup.sh
        dest=/scripts/
    - name: Make bup.sh executable through shell.
      shell: chmod +x /scripts/bup.sh
      args:
        warn: false
    - name: Add crontab entry for bup.sh to root's crontab
      cron:
        name="Backup varwwwhtml"
        hour="0"
        minute="0"
        job=/scripts/bup.sh
      run_once: true
    - name: Install NginX
      apt:
        name: nginx 
        state: present
    - name: Copy pre-defined NginX config to folder
      copy:
        src=./files/default
        dest=/etc/nginx/sites-available/
        force=yes
    - name: Reload NginX
      service:
        name=nginx
        state=reloaded
    - name: Install mariadb with shell script
      script: ./files/mariadb.sh
